/* src/app/dashboard/dashboard.module.scss */

@use '../../components/styles/variables' as var;
@use '../../components/styles/mixins' as mixins;
@use 'sass:color';

.dashboardContainer {
    @include mixins.page-layout;
    background-color: var.$background-light;
    min-height: calc(100vh - var.$navbar-height);

    .welcomeHeader {
        @include mixins.flex-center-between;
        background-color: var.$primary-color;
        color: var.$light-color;
        padding: var.$spacing-xl;
        border-radius: var.$border-radius-lg;
        margin-bottom: var.$spacing-xl;
        box-shadow: var.$box-shadow-md;
        flex-wrap: wrap;

        @include mixins.breakpoint-down(md) {
            flex-direction: column;
            align-items: flex-start;
            padding: var.$spacing-lg;
        }

        .welcomeTitle {
            font-size: var.$font-size-h1;
            margin-bottom: var.$spacing-sm;

            .emoji {
                margin-left: var.$spacing-sm;
            }
        }

        .welcomeMessage {
            font-size: var.$font-size-lg;
            opacity: 0.9;
            margin-bottom: var.$spacing-md;

            @include mixins.breakpoint-up(md) {
                margin-bottom: 0;
            }
        }

        .mainCtaButton {
            @include mixins.button-primary;
            font-size: var.$font-size-md;
            padding: var.$spacing-sm var.$spacing-md;
            display: flex;
            align-items: center;
            gap: var.$spacing-xs;

            .icon {
                font-size: var.$font-size-lg;
            }
        }
    }

    .dashboardGrid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: var.$spacing-lg;
        align-items: start;

        .gridItem {
            display: flex;
            flex-direction: column;
            gap: var.$spacing-md; // Espacio entre la tarjeta y su descripción
            min-width: 0; // Previene desbordamientos en flex/grid
        }

        .cardWrapper {
            flex-grow: 1; // Permite que la tarjeta ocupe el espacio disponible
        }

        .descriptionWrapper {
            background-color: var.$background-white;
            padding: var.$spacing-md;
            border-radius: var.$border-radius;
            box-shadow: var.$box-shadow-light;
            flex-shrink: 0; // Evita que la descripción se encoja
        }

        .sectionDescription {
            font-size: var.$font-size-sm;
            color: var.$text-md;
            line-height: 1.5;
        }

        .sectionTitle {
            font-size: var.$font-size-h3;
            color: var.$text-primary;
            margin-bottom: var.$spacing-md;
            padding-left: var.$spacing-sm;
            border-left: 4px solid var.$primary-color;
        }

        .fullWidthSection {
            grid-column: 1 / -1; // Ocupa todo el ancho
            margin-top: var.$spacing-xl;
            margin-bottom: var.$spacing-lg;

            .fullWidthContent {
                display: grid; // Usar grid para organizar la descripción y el placeholder
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: var.$spacing-lg;
                align-items: start;

                .descriptionWrapper {
                    // No necesita flex-shrink aquí si está en un grid
                }
            }
        }

        .placeholderCard {
            background-color: var.$background-white;
            border: 1px dashed var.$border-color;
            border-radius: var.$border-radius-lg;
            padding: var.$spacing-lg;
            text-align: center;
            color: var.$text-secondary;
            font-size: var.$font-size-md;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 150px;
            box-shadow: var.$box-shadow-light;
            flex-grow: 1; // Permite que el placeholder se estire en el grid

            .viewAllButton {
                @include mixins.button-base;
                background-color: var.$secondary-color;
                color: var.$light-color;
                border: 1px solid var.$secondary-color;
                margin-top: var.$spacing-md;

                &:hover {
                    // CORREGIDO: Usar color.adjust en lugar de color.darken
                    background-color: color.adjust(var.$secondary-color, $lightness: -10%);
                    border-color: color.adjust(var.$secondary-color, $lightness: -10%);
                }
            }
        }
    }
}