// src/app/vacancies/VacanciesPage.module.scss

@use '../../components/styles/_variables' as var;
@use '../../components/styles/mixins' as mixin;


.vacanciesPage {
    @include mixin.flex-column;
    align-items: center;
    padding: 2rem;
    background-color: var.$background-color-light;
    min-height: calc(100vh - var.$navbar-height);


    .title {
        color: var.$primary-color;
        margin-bottom: 2.5rem;
        font-size: 2.5rem;
        text-align: center;


        @include mixin.breakpoint-down(md) {
            font-size: 2rem;
            margin-bottom: 1.5rem;
        }
    }


    .searchForm {
        display: flex;
        flex-direction: column;
        gap: 1.2rem; // Espacio entre el input, las filas de filtros y el botón
        margin-bottom: 2rem;
        padding: 1.5rem;
        background-color: var.$light-color; // Fondo claro para el contenedor del formulario
        border-radius: var.$border-radius;
        box-shadow: var.$box-shadow-md; // Sombra más pronunciada para resaltar el formulario
        width: 100%;
        max-width: 960px;
        align-items: center;


        .searchInput {
            width: 100%;
            max-width: 800px; // Alinea con el max-width de filterRowsContainer
            min-width: unset;
            padding: 0.8rem 1.2rem; // Ajuste ligero del padding
            border: 1px solid var.$border-color;
            border-radius: var.$border-radius-sm;
            font-size: 1rem;
            color: var.$text-color;
            background-color: var.$light-color;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
            outline: none;
            height: 44px;


            &:focus {
                border-color: var.$primary-color; // Borde primario al enfocar
                box-shadow: 0 0 0 3px rgba(var.$primary-color, 0.2); // Sombra más notoria al enfocar
            }
        }


        .filterRowsContainer {
            display: flex;
            flex-direction: column;
            gap: 1.2rem;
            width: 100%;
            max-width: 800px; // Mantener alineación
        }


        .filterRow {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
            width: 100%;
        }


        .filterSelect {
            flex: 1;
            min-width: 200px;
            height: 44px;
            padding: 0.8rem 1rem;
            border: 1px solid var.$border-color;
            border-radius: var.$border-radius-sm;
            font-size: 1rem;
            color: var.$text-color;
            background-color: var.$light-color;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
            outline: none;
            appearance: none; // Remover estilo por defecto del sistema
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E"); // Icono de flecha personalizado
            background-repeat: no-repeat;
            background-position: right 0.8rem center;
            background-size: 18px;


            &:focus {
                border-color: var.$primary-color; // Borde primario al enfocar
                box-shadow: 0 0 0 3px rgba(var.$primary-color, 0.2); // Sombra más notoria al enfocar
            }


            option {
                color: var.$text-color;
                background-color: var.$light-color; // Asegurar fondo consistente en opciones
            }
        }


        .searchButton {
            @include mixin.button-primary; // Reutiliza tu mixin primario
            padding: 0.8rem 2rem; // Ajuste de padding
            font-size: 1.1rem; // Un poco más grande
            height: 48px; // Un poco más alto
            width: 200px;
            max-width: 100%;
            margin-top: 0.5rem;
            transition: background-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;


            &:hover {
                transform: translateY(-2px); // Efecto sutil al pasar el ratón
                box-shadow: var.$box-shadow-md; // Sombra al pasar el ratón
            }


            &:active {
                transform: translateY(0); // Efecto al hacer click
                box-shadow: none;
            }
        }


        // Media Queries for overall form responsiveness (keep as is)
        @include mixin.breakpoint-down(md) {
            .filterRow {
                justify-content: center;
            }
        }


        @include mixin.breakpoint-down(sm) {
            .filterRow {
                flex-direction: column;
                align-items: center;
            }

            .filterSelect {
                width: 100%;
                min-width: unset;
            }

            .searchButton {
                width: 100%;
            }
        }


        // Common styles for inputs and selects (no change needed here)
        .searchInput,
        .filterSelect {
            // These properties were common, moved them out for cleaner code
        }

        // Media Queries for overall form responsiveness (keep as is)
        @include mixin.breakpoint-down(md) {
            .filterRow {
                justify-content: center;
            }
        }

        @include mixin.breakpoint-down(sm) {
            .filterRow {
                flex-direction: column;
                align-items: center;
            }

            .filterSelect {
                width: 100%;
                min-width: unset;
            }

            .searchButton {
                width: 100%;
            }
        }
    }

    // ... (rest of your SCSS remains the same)
    .loadingMessage,
    .errorMessage,
    .noResults {
        text-align: center;
        padding: 2rem;
        width: 100%;
        max-width: 900px;
        background-color: var.$light-color;
        border-radius: var.$border-radius;
        box-shadow: var.$box-shadow-light;
        margin-top: 1rem;
        color: var.$text-secondary;
    }

    .errorMessage {
        color: var.$danger-color;
        border: 1px solid var.$danger-color;
        background-color: lighten(var.$danger-color, 35%);
    }

    .vacanciesGrid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        width: 100%;
        max-width: 900px;
    }

    .vacancyCard {
        position: relative;
        background-color: var.$light-color;
        padding: 1.5rem;
        border-radius: var.$border-radius;
        box-shadow: var.$box-shadow-md;
        border: 1px solid var.$border-color;
        @include mixin.flex-column;
        gap: 0.8rem;
        transition: transform 0.2s ease, box-shadow 0.2s ease;

        &:hover {
            transform: translateY(-5px);
            box-shadow: var.$box-shadow-md;
        }

        .cardHeader {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            margin-bottom: 0.5rem;
        }

        .cardTitle {
            font-size: 1.3rem;
            color: var.$primary-color;
            margin: 0;
        }

        .cardInstitution {
            font-size: 0.95rem;
            color: var.$text-color-light;
            margin-top: -0.5rem;
            font-weight: 500;
        }

        .cardDescription {
            font-size: 0.9rem;
            color: var.$text-secondary;
            line-height: 1.5;
            flex-grow: 1;
        }

        .cardTags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;

            .tag {
                display: inline-block;
                background-color: lighten(var.$primary-color, 40%);
                color: darken(var.$primary-color, 40%);
                padding: 0.3rem 0.7rem;
                border-radius: var.$border-radius-sm;
                font-size: 0.75rem;
                font-weight: 600;
                border: 1px solid lighten(var.$primary-color, 20%);
            }
        }

        .cardFooter {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px dashed var.$border-color-light;

            .cardLocation,
            .cardModality {
                font-size: 0.85rem;
                color: var.$text-color-light;
                font-weight: 500;
            }

            .viewDetailsButton {
                @include mixin.button-primary;
                padding: 0.6rem 1.2rem;
                font-size: 0.9rem;
                text-decoration: none;
            }
        }

        .saveButton {
            background: none;
            border: none;
            cursor: pointer;
            padding: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: color 0.2s ease, transform 0.2s ease;

            svg {
                color: var.$text-color-light;
                width: 24px;
                height: 24px;
            }

            &:hover {
                transform: scale(1.1);
            }

            &.saved {
                svg {
                    fill: var.$accent-color;
                    color: var.$accent-color;
                }
            }
        }

        .appliedIndicator {
            position: absolute;
            bottom: 0.5rem;
            right: 0.5rem;
            background-color: var.$success-color;
            color: var.$light-color;
            padding: 0.3rem 0.6rem;
            border-radius: var.$border-radius-sm;
            font-size: 0.75rem;
            font-weight: bold;
            z-index: 10;
        }
    }
}